
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
from guimine import Buttonmine,list_select

from pathlib import Path

from build2.db import Database





# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk,Label, Canvas, Entry, Text, Button, PhotoImage, Listbox,Scrollbar,Frame


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("./assets")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

frame = Frame(window,    bg = "#FFFFFF",
    height = 359,
    width = 734,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge")
frame.pack()

window.geometry("734x359")
window.configure(bg = "#FFFFFF")


canvas = Canvas(
    frame,
    bg = "#FFFFFF",
    height = 359,
    width = 734,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
canvas.create_rectangle(
    0.0,
    0.0,
    234.0,
    359.0,
    fill="#C4C4C4",
    outline="")

canvas.create_text(
    55.0,
    6.0,
    anchor="nw",
    text="Words",
    fill="#000000",
    font=("Roboto", 24 * -1)
)

canvas.create_text(
    433.0,
    6.0,
    anchor="nw",
    text="Definition ",
    fill="#000000",
    font=("Roboto", 24 * -1)
)

list_image_1 = PhotoImage(
    file=relative_to_assets("list_1.png"))
list_bg_1 = canvas.create_image(
    117.0,
    205.5,
    image=list_image_1
)
list_1 = Listbox(
    bd=0,
    bg="#991010",
    highlightthickness=0
)
list_1.place(
    x=0.0,
    y=52.0,
    width=234.0,
    height=305.0
)
















ob1=Database('build2/store.db')

i=0
# print(ob1,fetch())

for values in ob1.fetch():
    print(ob1.fetch())
    list_1.insert("end",values)


    
def open_new():
    print("clicked")
    
        
def s(event):
    global i
    
    p=list_1.curselection()
    p1=list_1.get(p)
    de_before=ob1.fetchdef(p1)
    de=de_before[0]
     #find length, and if length > 10 , cut from there and display and check length cut again if necessory 
    de=text(de)
    list_select(list_2,de,i)

def text(de):
    leng=len(de)
    i=leng//40
    j=0
    if leng > 40:
        list_text=list(de)
        print(list_text)
        while i != j:
            
            
            j=j+1
            
            f=j*40
            print(i,f,j)
            list_text.insert(f, '\n')
                        
            de_updated=""
            de_up=de_updated.join(list_text)
        return de_up


        # return de_up
    return de
    





    


    


list_1.bind('<<ListboxSelect>>', s)




    
   












scrollbar_1= Scrollbar(list_1)

scrollbar_1.place(
    x=210.0,
    y=0.0,
    width=23.0,
    height=305.0)

list_1.config(yscrollcommand=scrollbar_1.set)
scrollbar_1.config(command=list_1.yview)




list_image_2 = PhotoImage(
    file=relative_to_assets("list_2.png"))
list_bg_2 = canvas.create_image(
    481.0,
    205.5,
    image=list_image_2
)
list_2 = Label(
    bd=0,
    bg="#D95E5E",
    highlightthickness=0
)
list_2.place(
    x=234.0,
    y=52.0,
    width=494.0,
    height=305.0
)



button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=open_new,
    relief="flat"
)
button_1.place(
    x=658.0,
    y=292.0,
    width=60.0,
    height=53.0
)
window.resizable(False, False)
window.mainloop()
